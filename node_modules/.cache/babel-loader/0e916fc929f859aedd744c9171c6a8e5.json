{"ast":null,"code":"export default function checkAnswer(_ref) {\n  let {\n    target\n  } = _ref;\n  let difficulty = 0;\n\n  if (props.questions[index].difficulty === 'easy') {\n    difficulty = SCORE_EASY;\n  } else if (props.questions[index].difficulty === 'medium') {\n    difficulty = SCORE_MEDIUM;\n  } else if (props.questions[index].difficulty === 'hard') {\n    difficulty = SCORE_HARD;\n  }\n\n  const isCorrect = target.getAttribute('data-testid').includes('correct');\n\n  if (isCorrect) {\n    const newScore = SCORE_INIT + Interval * difficulty;\n    const userInfo = {\n      userName,\n      userEmail,\n      score: score + newScore,\n      total: total + newScore,\n      assertions: assertions + 1\n    };\n    localStorage.setItem('player', JSON.stringify(userInfo));\n    props.dispatchUserInfo(userInfo);\n  }\n}","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/commons/utils/ScreenGame.js"],"names":["checkAnswer","target","difficulty","props","questions","index","SCORE_EASY","SCORE_MEDIUM","SCORE_HARD","isCorrect","getAttribute","includes","newScore","SCORE_INIT","Interval","userInfo","userName","userEmail","score","total","assertions","localStorage","setItem","JSON","stringify","dispatchUserInfo"],"mappings":"AAAA,eAAe,SAASA,WAAT,OAAiC;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC9C,MAAIC,UAAU,GAAG,CAAjB;;AACA,MAAIC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,EAAuBH,UAAvB,KAAsC,MAA1C,EAAkD;AAChDA,IAAAA,UAAU,GAAGI,UAAb;AACD,GAFD,MAEO,IAAIH,KAAK,CAACC,SAAN,CAAgBC,KAAhB,EAAuBH,UAAvB,KAAsC,QAA1C,EAAoD;AACzDA,IAAAA,UAAU,GAAGK,YAAb;AACD,GAFM,MAEA,IAAIJ,KAAK,CAACC,SAAN,CAAgBC,KAAhB,EAAuBH,UAAvB,KAAsC,MAA1C,EAAkD;AACvDA,IAAAA,UAAU,GAAGM,UAAb;AACD;;AAED,QAAMC,SAAS,GAAGR,MAAM,CAACS,YAAP,CAAoB,aAApB,EAAmCC,QAAnC,CAA4C,SAA5C,CAAlB;;AACA,MAAIF,SAAJ,EAAe;AACb,UAAMG,QAAQ,GAAGC,UAAU,GAAIC,QAAQ,GAAGZ,UAA1C;AACA,UAAMa,QAAQ,GAAG;AACfC,MAAAA,QADe;AAEfC,MAAAA,SAFe;AAGfC,MAAAA,KAAK,EAAEA,KAAK,GAAGN,QAHA;AAIfO,MAAAA,KAAK,EAAEA,KAAK,GAAGP,QAJA;AAKfQ,MAAAA,UAAU,EAAEA,UAAU,GAAG;AALV,KAAjB;AAOAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeT,QAAf,CAA/B;AACAZ,IAAAA,KAAK,CAACsB,gBAAN,CAAuBV,QAAvB;AACD;AACF","sourcesContent":["export default function checkAnswer({ target }) {\n  let difficulty = 0;\n  if (props.questions[index].difficulty === 'easy') {\n    difficulty = SCORE_EASY;\n  } else if (props.questions[index].difficulty === 'medium') {\n    difficulty = SCORE_MEDIUM;\n  } else if (props.questions[index].difficulty === 'hard') {\n    difficulty = SCORE_HARD;\n  }\n\n  const isCorrect = target.getAttribute('data-testid').includes('correct');\n  if (isCorrect) {\n    const newScore = SCORE_INIT + (Interval * difficulty);\n    const userInfo = {\n      userName,\n      userEmail,\n      score: score + newScore,\n      total: total + newScore,\n      assertions: assertions + 1,\n    };\n    localStorage.setItem('player', JSON.stringify(userInfo));\n    props.dispatchUserInfo(userInfo);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}