{"ast":null,"code":"var _jsxFileName = \"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Game/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchTriviaApi from '../../services/triviaApi';\nimport TableApp from '../../components/Table';\n\nfunction Game(props) {\n  const {\n    player: {\n      name,\n      score,\n      gravatarEmail\n    }\n  } = props;\n  const [trivia, setTrivia] = useState({\n    questions: [],\n    index: 0,\n    allAnswers: []\n  });\n  console.log(trivia.questions[trivia.index], 'question');\n\n  async function handleTrivia() {\n    const fetchTrivia = await fetchTriviaApi();\n    setTrivia({ ...trivia,\n      questions: fetchTrivia.results,\n      allAnswers: [trivia.questions.correct_answers, ...trivia.questions.incorrect_answers]\n    });\n  }\n\n  useEffect(() => {\n    handleTrivia();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"TRIVIA\"), /*#__PURE__*/React.createElement(TableApp, {\n    name: name,\n    score: score,\n    gravatarEmail: gravatarEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, trivia.questions.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"question-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, `Category: ${trivia.questions[trivia.index].category}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, trivia.questions[trivia.index].question), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))));\n}\n\nGame.propTypes = {\n  name: PropTypes.string,\n  score: PropTypes.number\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  player: state.player\n});\n\nexport default connect(mapStateToProps, null)(Game);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Game/index.jsx"],"names":["React","useState","useEffect","PropTypes","connect","fetchTriviaApi","TableApp","Game","props","player","name","score","gravatarEmail","trivia","setTrivia","questions","index","allAnswers","console","log","handleTrivia","fetchTrivia","results","correct_answers","incorrect_answers","length","category","question","propTypes","string","number","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAAV,MAA6CJ,KAAnD;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC;AACnCc,IAAAA,SAAS,EAAE,EADwB;AAEnCC,IAAAA,KAAK,EAAE,CAF4B;AAGnCC,IAAAA,UAAU,EAAE;AAHuB,GAAD,CAApC;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACE,SAAP,CAAiBF,MAAM,CAACG,KAAxB,CAAZ,EAA4C,UAA5C;;AAEA,iBAAeI,YAAf,GAA8B;AAC5B,UAAMC,WAAW,GAAG,MAAMhB,cAAc,EAAxC;AACAS,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAERE,MAAAA,SAAS,EAAEM,WAAW,CAACC,OAFf;AAGRL,MAAAA,UAAU,EAAE,CAACJ,MAAM,CAACE,SAAP,CAAiBQ,eAAlB,EACV,GAAGV,MAAM,CAACE,SAAP,CAAiBS,iBADV;AAHJ,KAAD,CAAT;AAMD;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAGV,IADT;AAEE,IAAA,KAAK,EAAGC,KAFV;AAGE,IAAA,aAAa,EAAGC,aAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,MAAM,CAACE,SAAP,CAAiBU,MAAjB,GAA0B,CAA1B,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,mBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,aAAYZ,MAAM,CAACE,SAAP,CAAiBF,MAAM,CAACG,KAAxB,EAA+BU,QAAS,EADzD,CADF,eAIE;AAAG,mBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIb,MAAM,CAACE,SAAP,CAAiBF,MAAM,CAACG,KAAxB,EAA+BW,QADnC,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFJ,CATF,CADF;AA2BD;;AAEDpB,IAAI,CAACqB,SAAL,GAAiB;AACflB,EAAAA,IAAI,EAAEP,SAAS,CAAC0B,MADD;AAEflB,EAAAA,KAAK,EAAER,SAAS,CAAC2B;AAFF,EAGfC,UAHF;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCxB,EAAAA,MAAM,EAAEwB,KAAK,CAACxB;AADoB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAAC4B,eAAD,EAAkB,IAAlB,CAAP,CAA+BzB,IAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchTriviaApi from '../../services/triviaApi';\nimport TableApp from '../../components/Table';\n\nfunction Game(props) {\n  const { player: { name, score, gravatarEmail } } = props;\n  const [trivia, setTrivia] = useState({\n    questions: [],\n    index: 0,\n    allAnswers: [],\n  });\n\n  console.log(trivia.questions[trivia.index], 'question');\n\n  async function handleTrivia() {\n    const fetchTrivia = await fetchTriviaApi();\n    setTrivia({\n      ...trivia,\n      questions: fetchTrivia.results,\n      allAnswers: [trivia.questions.correct_answers,\n        ...trivia.questions.incorrect_answers],\n    });\n  }\n\n  useEffect(() => {\n    handleTrivia();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>TRIVIA</h1>\n        <TableApp\n          name={ name }\n          score={ score }\n          gravatarEmail={ gravatarEmail }\n        />\n      </header>\n      <main>\n        { trivia.questions.length > 0 && (\n          <div>\n            <p data-testid=\"question-category\">\n              { `Category: ${trivia.questions[trivia.index].category}` }\n            </p>\n            <p data-testid=\"question-text\">\n              { trivia.questions[trivia.index].question }\n            </p>\n            <div>\n\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nGame.propTypes = {\n  name: PropTypes.string,\n  score: PropTypes.number,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n});\n\nexport default connect(mapStateToProps, null)(Game);\n"]},"metadata":{},"sourceType":"module"}