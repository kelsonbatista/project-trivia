{"ast":null,"code":"import _regeneratorRuntime from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import{useHistory}from'react-router-dom';import md5 from'crypto-js/md5';import Input from'../../components/Input';import Button from'../../components/Button';import'./style.css';import fetchToken from'../../services/token';import{requestToken,setPlayer}from'../../store/actions';function Login(props){var _useState=useState({name:'',email:''}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var history=useHistory();var dispatchPlayer=props.dispatchPlayer,dispatchToken=props.dispatchToken;function handleChange(_ref){var _ref$target=_ref.target,name=_ref$target.name,value=_ref$target.value;setUser(_objectSpread(_objectSpread({},user),{},_defineProperty({},name,value)));}function handlePlayer(){var hash=md5(user.email).toString();var player={name:user.name,assertions:0,score:0,total:0,gravatarEmail:\"https://www.gravatar.com/avatar/\".concat(hash)};dispatchPlayer(player);}function handleClick(){return _handleClick.apply(this,arguments);}function _handleClick(){_handleClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tokenInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchToken();case 2:tokenInfo=_context.sent;localStorage.setItem('token',JSON.stringify(tokenInfo.token));dispatchToken(tokenInfo.token);handlePlayer();history.push('/game');case 7:case\"end\":return _context.stop();}}},_callee);}));return _handleClick.apply(this,arguments);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Input,{classDiv:\"login__div\",className:\"login__name\",dataTestid:\"input-player-name\",id:\"name\",name:\"name\",onChange:function onChange(event){return handleChange(event);},placeholder:\"Digite seu nome\",value:user.name,type:\"text\"}),/*#__PURE__*/React.createElement(Input,{classDiv:\"login__div\",className:\"login__email\",dataTestid:\"input-gravatar-email\",id:\"email\",name:\"email\",onChange:function onChange(event){return handleChange(event);},placeholder:\"Digite seu email\",value:user.email,type:\"email\"}),/*#__PURE__*/React.createElement(Button,{className:\"login__button \".concat(user.name&&user.email?'':'disabled'),dataTestid:\"btn-play\",disabled:!user.name||!user.email,id:\"loginbtn\",name:\"login-btn\",onClick:function onClick(){return handleClick();},text:\"Play\",type:\"button\"}),/*#__PURE__*/React.createElement(Button,{className:\"settings__button\",dataTestid:\"btn-settings\",id:\"settingsbtn\",name:\"settings-btn\",onClick:function onClick(){return history.push('/settings');},text:\"Settings\",type:\"button\"}));}var mapDispatchToProps=function mapDispatchToProps(dispatch){return{dispatchToken:function dispatchToken(tokenInfo){return dispatch(requestToken(tokenInfo));},dispatchPlayer:function dispatchPlayer(player){return dispatch(setPlayer(player));}};};export default connect(null,mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Login/index.jsx"],"names":["React","useState","connect","useHistory","md5","Input","Button","fetchToken","requestToken","setPlayer","Login","props","name","email","user","setUser","history","dispatchPlayer","dispatchToken","handleChange","target","value","handlePlayer","hash","toString","player","assertions","score","total","gravatarEmail","handleClick","tokenInfo","localStorage","setItem","JSON","stringify","token","push","event","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport './style.css';\nimport fetchToken from '../../services/token';\nimport { requestToken, setPlayer } from '../../store/actions';\n\nfunction Login(props) {\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n  });\n\n  const history = useHistory();\n  const { dispatchPlayer, dispatchToken } = props;\n\n  function handleChange({ target: { name, value } }) {\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  }\n\n  function handlePlayer() {\n    const hash = md5(user.email).toString();\n    const player = {\n      name: user.name,\n      assertions: 0,\n      score: 0,\n      total: 0,\n      gravatarEmail: `https://www.gravatar.com/avatar/${hash}`,\n    };\n    dispatchPlayer(player);\n  }\n\n  async function handleClick() {\n    const tokenInfo = await fetchToken();\n    localStorage.setItem('token', JSON.stringify(tokenInfo.token));\n    dispatchToken(tokenInfo.token);\n    handlePlayer();\n    history.push('/game');\n  }\n\n  return (\n    <>\n      <Input\n        classDiv=\"login__div\"\n        className=\"login__name\"\n        dataTestid=\"input-player-name\"\n        id=\"name\"\n        name=\"name\"\n        onChange={ (event) => handleChange(event) }\n        placeholder=\"Digite seu nome\"\n        value={ user.name }\n        type=\"text\"\n      />\n      <Input\n        classDiv=\"login__div\"\n        className=\"login__email\"\n        dataTestid=\"input-gravatar-email\"\n        id=\"email\"\n        name=\"email\"\n        onChange={ (event) => handleChange(event) }\n        placeholder=\"Digite seu email\"\n        value={ user.email }\n        type=\"email\"\n      />\n      <Button\n        className={ `login__button ${(user.name && user.email) ? '' : 'disabled'}` }\n        dataTestid=\"btn-play\"\n        disabled={ !user.name || !user.email }\n        id=\"loginbtn\"\n        name=\"login-btn\"\n        onClick={ () => handleClick() }\n        text=\"Play\"\n        type=\"button\"\n      />\n      <Button\n        className=\"settings__button\"\n        dataTestid=\"btn-settings\"\n        id=\"settingsbtn\"\n        name=\"settings-btn\"\n        onClick={ () => history.push('/settings') }\n        text=\"Settings\"\n        type=\"button\"\n      />\n    </>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.instanceOf(Object),\n  dispatchToken: PropTypes.func,\n  dispatchPlayer: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchToken: (tokenInfo) => dispatch(requestToken(tokenInfo)),\n  dispatchPlayer: (player) => dispatch(setPlayer(player)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}