{"ast":null,"code":"import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport addToken from '../store/actions/tokenActions';\n\nconst requestToken = props => {\n  const {\n    dispatchToken\n  } = props;\n  const tokenRequestUrl = 'https://opentdb.com/api_token.php?command=request';\n  fetch(tokenRequestUrl).then(result => result.json()).then(data => dispatchToken(data)).catch(error => `Error found: ${error}`);\n};\n\nrequestToken.propTypes = {\n  dispatchToken: PropTypes.object\n}.isRequired;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchToken: tokenInfo => dispatch(addToken(tokenInfo))\n});\n\nexport default connect(null, mapDispatchToProps)(requestToken);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/services/token.js"],"names":["connect","PropTypes","addToken","requestToken","props","dispatchToken","tokenRequestUrl","fetch","then","result","json","data","catch","error","propTypes","object","isRequired","mapDispatchToProps","dispatch","tokenInfo"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;AACA,QAAME,eAAe,GAAG,mDAAxB;AACAC,EAAAA,KAAK,CAACD,eAAD,CAAL,CACGE,IADH,CACSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAUN,aAAa,CAACM,IAAD,CAF/B,EAGGC,KAHH,CAGUC,KAAD,IAAY,gBAAeA,KAAM,EAH1C;AAID,CAPD;;AASAV,YAAY,CAACW,SAAb,GAAyB;AACvBT,EAAAA,aAAa,EAAEJ,SAAS,CAACc;AADF,EAEvBC,UAFF;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,aAAa,EAAGc,SAAD,IAAeD,QAAQ,CAAChB,QAAQ,CAACiB,SAAD,CAAT;AADE,CAAf,CAA3B;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCd,YAAlC,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport addToken from '../store/actions/tokenActions';\n\nconst requestToken = (props) => {\n  const { dispatchToken } = props;\n  const tokenRequestUrl = 'https://opentdb.com/api_token.php?command=request';\n  fetch(tokenRequestUrl)\n    .then((result) => result.json())\n    .then((data) => dispatchToken(data))\n    .catch((error) => `Error found: ${error}`);\n};\n\nrequestToken.propTypes = {\n  dispatchToken: PropTypes.object,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchToken: (tokenInfo) => dispatch(addToken(tokenInfo)),\n});\n\nexport default connect(null, mapDispatchToProps)(requestToken);\n"]},"metadata":{},"sourceType":"module"}