{"ast":null,"code":"var _jsxFileName = \"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/ScreenGame.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { requestToken, handleApi, setUserInfo } from '../action/index';\nimport '../styles.css';\n\nfunction ScreenGame(props) {\n  const TRINTA = 30;\n  const UM = 1;\n  const MIL = 1000;\n  const SCORE_INIT = 10;\n  const SCORE_EASY = 1;\n  const SCORE_MEDIUM = 2;\n  const SCORE_HARD = 3;\n  const MAX_QUESTIONS = 5;\n  const numberRandom = Math.random() * 100;\n  const [btnDisable, setBtnDisable] = useState(true);\n  const [index, setIndex] = useState(0);\n  const [Interval, setIntervallGame] = useState(TRINTA);\n  const styleTrue = 'border: \\'3px solid rgb(6, 240, 15)\\'';\n  const styleFalse = 'border: \\'3px solid rgb(255, 0, 0)\\'';\n  const {\n    player: {\n      name,\n      email,\n      score,\n      total,\n      assertions\n    }\n  } = props;\n  const [countQuestions, setCountQuestions] = useState(1);\n  useEffect(() => {\n    props.handleApi();\n    setInterval(() => {\n      setIntervallGame(Interval => Interval - UM);\n    }, MIL);\n    return () => clearInterval(Interval);\n  }, []);\n  useEffect(() => {\n    if (Interval <= 0) {\n      setBtnDisable(true);\n    } else {\n      setBtnDisable(false);\n    }\n  }, [Interval]);\n\n  function checkAnswer(_ref) {\n    let {\n      target\n    } = _ref;\n    let difficulty = 0;\n\n    if (props.questions[index].difficulty === 'easy') {\n      difficulty = SCORE_EASY;\n    } else if (props.questions[index].difficulty === 'medium') {\n      difficulty = SCORE_MEDIUM;\n    } else if (props.questions[index].difficulty === 'hard') {\n      difficulty = SCORE_HARD;\n    }\n\n    const isCorrect = target.getAttribute('data-testid').includes('correct');\n\n    if (isCorrect) {\n      const newScore = SCORE_INIT + Interval * difficulty;\n      const userInfo = {\n        name,\n        email,\n        score: score + newScore,\n        total: total + newScore,\n        assertions: assertions + 1\n      };\n      localStorage.setItem('player', JSON.stringify(userInfo));\n      props.dispatchUserInfo(userInfo);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"header-profile-picture\",\n    src: \"https://www.gravatar.com/avatar/c19ad9dbaf91c5533605fbf985177ccc\",\n    alt: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"header-player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"header-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, score)), props.questions.length > 0 && numberRandom <= 50 ? /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"answer-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"question-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, props.questions[index].category), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, props.questions[index].question), /*#__PURE__*/React.createElement(\"section\", {\n    \"data-testid\": \"answer-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: Interval <= 0 ? 'disabled' : btnDisable,\n    style: styleTrue,\n    \"data-testid\": \"correct-answer\",\n    onClick: event => checkAnswer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, props.questions[index].correct_answer), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    style: styleFalse,\n    \"data-testid\": `wrong-answer-${index}`,\n    onClick: event => checkAnswer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, props.questions[index].incorrect_answers[0]), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    style: styleFalse,\n    \"data-testid\": `wrong-answer-${index}`,\n    onClick: event => checkAnswer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, props.questions[index].incorrect_answers[1]), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    style: styleFalse,\n    \"data-testid\": `wrong-answer-${index}`,\n    onClick: event => checkAnswer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, props.questions[index].incorrect_answers[2]))) : props.questions.length > 0 && numberRandom > 50 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"question-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, props.questions[index].category), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, props.questions[index].question), /*#__PURE__*/React.createElement(\"section\", {\n    \"data-testid\": \"answer-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    style: styleFalse,\n    \"data-testid\": `wrong-answer-${index}`,\n    onClick: event => checkAnswer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, props.questions[index].incorrect_answers[0]), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    style: styleFalse,\n    \"data-testid\": `wrong-answer-${index}`,\n    onClick: event => checkAnswer(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, props.questions[index].incorrect_answers[1]), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: Interval <= 0 ? 'disabled' : btnDisable,\n    onClick: event => checkAnswer(event),\n    style: styleTrue,\n    \"data-testid\": \"correct-answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, props.questions[index].correct_answer), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: event => checkAnswer(event),\n    style: styleFalse,\n    \"data-testid\": `wrong-answer-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, props.questions[index].incorrect_answers[2]))), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"btn-next\",\n    onClick: () => {\n      const {\n        history\n      } = props;\n      setCountQuestions(countQuestions + 1);\n      setIntervallGame(TRINTA);\n      setIndex(index + 1);\n\n      if (countQuestions === MAX_QUESTIONS) {\n        setCountQuestions(0);\n        history.push('/feedback');\n      }\n    },\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, \"Proxima Pergunta\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, `Tempo: ${Interval}`)));\n}\n\nconst mapStateToProps = state => ({\n  player: state.player,\n  questions: state.questions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  RequestToken() {\n    dispatch(requestToken());\n  },\n\n  dispatchUserInfo(score) {\n    dispatch(setUserInfo(score));\n  },\n\n  handleApi() {\n    dispatch(handleApi());\n  }\n\n});\n\nScreenGame.propTypes = {\n  player: PropTypes.instanceOf(Object),\n  dispatchUserInfo: PropTypes.func,\n  history: PropTypes.instanceOf(Object),\n  handleApi: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenGame);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/ScreenGame.jsx"],"names":["React","useState","useEffect","connect","PropTypes","requestToken","handleApi","setUserInfo","ScreenGame","props","TRINTA","UM","MIL","SCORE_INIT","SCORE_EASY","SCORE_MEDIUM","SCORE_HARD","MAX_QUESTIONS","numberRandom","Math","random","btnDisable","setBtnDisable","index","setIndex","Interval","setIntervallGame","styleTrue","styleFalse","player","name","email","score","total","assertions","countQuestions","setCountQuestions","setInterval","clearInterval","checkAnswer","target","difficulty","questions","isCorrect","getAttribute","includes","newScore","userInfo","localStorage","setItem","JSON","stringify","dispatchUserInfo","length","category","question","event","correct_answer","incorrect_answers","history","push","mapStateToProps","state","mapDispatchToProps","dispatch","RequestToken","propTypes","instanceOf","Object","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { requestToken, handleApi, setUserInfo } from '../action/index';\nimport '../styles.css';\n\nfunction ScreenGame(props) {\n  const TRINTA = 30;\n  const UM = 1;\n  const MIL = 1000;\n  const SCORE_INIT = 10;\n  const SCORE_EASY = 1;\n  const SCORE_MEDIUM = 2;\n  const SCORE_HARD = 3;\n  const MAX_QUESTIONS = 5;\n\n  const numberRandom = Math.random() * 100;\n  const [btnDisable, setBtnDisable] = useState(true);\n  const [index, setIndex] = useState(0);\n  const [Interval, setIntervallGame] = useState(TRINTA);\n  const styleTrue = 'border: \\'3px solid rgb(6, 240, 15)\\'';\n  const styleFalse = 'border: \\'3px solid rgb(255, 0, 0)\\'';\n  const { player: { name, email, score, total, assertions } } = props;\n  const [countQuestions, setCountQuestions] = useState(1);\n\n  useEffect(() => {\n    props.handleApi();\n    setInterval(() => {\n      setIntervallGame((Interval) => Interval - UM);\n    }, MIL);\n    return () => clearInterval(Interval);\n  }, []);\n\n  useEffect(() => {\n    if (Interval <= 0) {\n      setBtnDisable(true);\n    } else {\n      setBtnDisable(false);\n    }\n  }, [Interval]);\n\n  function checkAnswer({ target }) {\n    let difficulty = 0;\n    if (props.questions[index].difficulty === 'easy') {\n      difficulty = SCORE_EASY;\n    } else if (props.questions[index].difficulty === 'medium') {\n      difficulty = SCORE_MEDIUM;\n    } else if (props.questions[index].difficulty === 'hard') {\n      difficulty = SCORE_HARD;\n    }\n\n    const isCorrect = target.getAttribute('data-testid').includes('correct');\n    if (isCorrect) {\n      const newScore = SCORE_INIT + (Interval * difficulty);\n      const userInfo = {\n        name,\n        email,\n        score: score + newScore,\n        total: total + newScore,\n        assertions: assertions + 1,\n      };\n      localStorage.setItem('player', JSON.stringify(userInfo));\n      props.dispatchUserInfo(userInfo);\n    }\n  }\n\n  return (\n    <div>\n      <header>\n        <img\n          data-testid=\"header-profile-picture\"\n          src=\"https://www.gravatar.com/avatar/c19ad9dbaf91c5533605fbf985177ccc\"\n          alt=\"img\"\n        />\n        <h3 data-testid=\"header-player-name\">{name}</h3>\n        <h3 data-testid=\"header-score\">{score}</h3>\n      </header>\n      {props.questions.length > 0 && numberRandom <= 50 ? (\n        <div data-testid=\"answer-options\">\n          <p data-testid=\"question-category\">{props.questions[index].category}</p>\n          <p data-testid=\"question-text\">{props.questions[index].question}</p>\n\n          <section data-testid=\"answer-options\">\n            <button\n              type=\"button\"\n              disabled={ Interval <= 0 ? 'disabled' : btnDisable }\n              style={ styleTrue }\n              data-testid=\"correct-answer\"\n              onClick={ (event) => checkAnswer(event) }\n            >\n              {props.questions[index].correct_answer}\n            </button>\n\n            <button\n              type=\"button\"\n              style={ styleFalse }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ (event) => checkAnswer(event) }\n            >\n              {props.questions[index].incorrect_answers[0]}\n            </button>\n\n            <button\n              type=\"button\"\n              style={ styleFalse }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ (event) => checkAnswer(event) }\n            >\n              {props.questions[index].incorrect_answers[1]}\n            </button>\n\n            <button\n              type=\"button\"\n              style={ styleFalse }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ (event) => checkAnswer(event) }\n            >\n              {props.questions[index].incorrect_answers[2]}\n            </button>\n          </section>\n\n        </div>\n      ) : (\n        props.questions.length > 0\n        && numberRandom > 50 && (\n          <div>\n            <p data-testid=\"question-category\">{props.questions[index].category}</p>\n            <p data-testid=\"question-text\">{props.questions[index].question}</p>\n\n            <section data-testid=\"answer-options\">\n              <button\n                type=\"button\"\n                style={ styleFalse }\n                data-testid={ `wrong-answer-${index}` }\n                onClick={ (event) => checkAnswer(event) }\n              >\n                {props.questions[index].incorrect_answers[0]}\n              </button>\n\n              <button\n                type=\"button\"\n                style={ styleFalse }\n                data-testid={ `wrong-answer-${index}` }\n                onClick={ (event) => checkAnswer(event) }\n              >\n                {props.questions[index].incorrect_answers[1]}\n              </button>\n\n              <button\n                type=\"button\"\n                disabled={ Interval <= 0 ? 'disabled' : btnDisable }\n                onClick={ (event) => checkAnswer(event) }\n                style={ styleTrue }\n                data-testid=\"correct-answer\"\n              >\n                {props.questions[index].correct_answer}\n              </button>\n              <button\n                type=\"button\"\n                onClick={ (event) => checkAnswer(event) }\n                style={ styleFalse }\n                data-testid={ `wrong-answer-${index}` }\n              >\n                {props.questions[index].incorrect_answers[2]}\n              </button>\n            </section>\n          </div>\n        )\n      )}\n      <button\n        data-testid=\"btn-next\"\n        onClick={ () => {\n          const { history } = props;\n          setCountQuestions(countQuestions + 1);\n          setIntervallGame(TRINTA);\n          setIndex(index + 1);\n          if (countQuestions === MAX_QUESTIONS) {\n            setCountQuestions(0);\n            history.push('/feedback');\n          }\n        } }\n        type=\"button\"\n      >\n        Proxima Pergunta\n      </button>\n      <div>\n        <p>{`Tempo: ${Interval}`}</p>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  questions: state.questions,\n\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  RequestToken() {\n    dispatch(requestToken());\n  },\n  dispatchUserInfo(score) {\n    dispatch(setUserInfo(score));\n  },\n  handleApi() {\n    dispatch(handleApi());\n  },\n});\n\nScreenGame.propTypes = {\n  player: PropTypes.instanceOf(Object),\n  dispatchUserInfo: PropTypes.func,\n  history: PropTypes.instanceOf(Object),\n  handleApi: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenGame);\n"]},"metadata":{},"sourceType":"module"}