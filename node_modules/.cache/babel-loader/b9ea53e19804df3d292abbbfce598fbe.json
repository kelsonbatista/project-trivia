{"ast":null,"code":"import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport requestToken from '../store/actions/tokenActions';\nexport const fetchToken = () => {\n  const tokenRequestUrl = 'https://opentdb.com/api_token.php?command=request';\n  console.log('entrou fetchToken');\n  fetch(tokenRequestUrl).then(result => result.json()).then(data => () => data).catch(error => `Error found: ${error}`);\n};\nfetchToken.propTypes = {\n  dispatchToken: PropTypes.func\n}.isRequired;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchToken: tokenInfo => dispatch(requestToken(tokenInfo))\n});\n\nexport default connect(null, mapDispatchToProps)(fetchToken);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/services/token.js"],"names":["connect","PropTypes","requestToken","fetchToken","tokenRequestUrl","console","log","fetch","then","result","json","data","catch","error","propTypes","dispatchToken","func","isRequired","mapDispatchToProps","dispatch","tokenInfo"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAMC,eAAe,GAAG,mDAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAC,EAAAA,KAAK,CAACH,eAAD,CAAL,CACGI,IADH,CACSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAU,MAAOA,IAFzB,EAGGC,KAHH,CAGUC,KAAD,IAAY,gBAAeA,KAAM,EAH1C;AAID,CAPM;AASPV,UAAU,CAACW,SAAX,GAAuB;AACrBC,EAAAA,aAAa,EAAEd,SAAS,CAACe;AADJ,EAErBC,UAFF;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCJ,EAAAA,aAAa,EAAGK,SAAD,IAAeD,QAAQ,CAACjB,YAAY,CAACkB,SAAD,CAAb;AADE,CAAf,CAA3B;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCf,UAAlC,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport requestToken from '../store/actions/tokenActions';\n\nexport const fetchToken = () => {\n  const tokenRequestUrl = 'https://opentdb.com/api_token.php?command=request';\n  console.log('entrou fetchToken');\n  fetch(tokenRequestUrl)\n    .then((result) => result.json())\n    .then((data) => () => (data))\n    .catch((error) => `Error found: ${error}`);\n};\n\nfetchToken.propTypes = {\n  dispatchToken: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchToken: (tokenInfo) => dispatch(requestToken(tokenInfo)),\n});\n\nexport default connect(null, mapDispatchToProps)(fetchToken);\n"]},"metadata":{},"sourceType":"module"}