{"ast":null,"code":"var _jsxFileName = \"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Feedback/index.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TableApp from '../../components/Table';\nimport Button from '../../components/Button';\nimport { THREE } from '../../commons/constants';\n\nfunction Feedback(props) {\n  const {\n    history,\n    player: {\n      name,\n      assertions,\n      score,\n      total,\n      gravatarEmail\n    }\n  } = props;\n\n  function checkAssertions() {\n    if (assertions < THREE) return 'Could be better...';\n    return 'Well Done!';\n  }\n\n  function handleRanking() {\n    console.log('executou ranking');\n    let prevRanking = localStorage.getItem('ranking');\n    if (prevRanking.length === 0) prevRanking = [];\n    const player = {\n      name,\n      score: total,\n      picture: gravatarEmail\n    };\n    const ranking = JSON.parse(prevRanking).push(player);\n    console.log(ranking, 'ranking');\n    localStorage.setItem('ranking', JSON.stringify(ranking));\n  }\n\n  useEffect(() => {\n    handleRanking();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Feedback\"), /*#__PURE__*/React.createElement(TableApp, {\n    name: name,\n    score: score,\n    gravatarEmail: gravatarEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"feedback-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, checkAssertions()), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Pontos: \"), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"feedback-total-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, score)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Total: \"), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"feedback-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, total)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Acertos: \"), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"feedback-total-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, assertions)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"play__btn\",\n    dataTestid: \"btn-play-again\",\n    onClick: () => {},\n    text: \"Play Again\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"ranking__btn\",\n    dataTestid: \"btn-ranking\",\n    onClick: () => history.push('/ranking'),\n    text: \"Ranking\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n}\n\nFeedback.propTypes = {\n  player: PropTypes.object\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  player: state.player\n});\n\nexport default connect(mapStateToProps, null)(Feedback);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Feedback/index.js"],"names":["React","useEffect","PropTypes","connect","TableApp","Button","THREE","Feedback","props","history","player","name","assertions","score","total","gravatarEmail","checkAssertions","handleRanking","console","log","prevRanking","localStorage","getItem","length","picture","ranking","JSON","parse","push","setItem","stringify","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,KAAT,QAAsB,yBAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,UAAR;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA;AAAlC;AAAnB,MAAyEP,KAA/E;;AAEA,WAASQ,eAAT,GAA2B;AACzB,QAAIJ,UAAU,GAAGN,KAAjB,EAAwB,OAAO,oBAAP;AACxB,WAAO,YAAP;AACD;;AAED,WAASW,aAAT,GAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAlB;AACA,QAAIF,WAAW,CAACG,MAAZ,KAAuB,CAA3B,EAA8BH,WAAW,GAAG,EAAd;AAC9B,UAAMV,MAAM,GAAG;AACbC,MAAAA,IADa;AAEbE,MAAAA,KAAK,EAAEC,KAFM;AAGbU,MAAAA,OAAO,EAAET;AAHI,KAAf;AAKA,UAAMU,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWP,WAAX,EAAwBQ,IAAxB,CAA6BlB,MAA7B,CAAhB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ,EAAqB,SAArB;AACAJ,IAAAA,YAAY,CAACQ,OAAb,CAAqB,SAArB,EAAgCH,IAAI,CAACI,SAAL,CAAeL,OAAf,CAAhC;AACD;;AAEDxB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAGN,IADT;AAEE,IAAA,KAAK,EAAGE,KAFV;AAGE,IAAA,aAAa,EAAGE,aAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCC,eAAe,EAAjD,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,mBAAY,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CH,KAA3C,CAFF,CARF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,mBAAY,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCC,KAArC,CAFF,CAZF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAM,mBAAY,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CF,UAA9C,CAFF,CAhBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,UAAU,EAAC,gBAFb;AAGE,IAAA,OAAO,EAAG,MAAM,CAAE,CAHpB;AAIE,IAAA,IAAI,EAAC,YAJP;AAKE,IAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,UAAU,EAAC,aAFb;AAGE,IAAA,OAAO,EAAG,MAAMH,OAAO,CAACmB,IAAR,CAAa,UAAb,CAHlB;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CApBF,CADF;AAuCD;;AAEDrB,QAAQ,CAACwB,SAAT,GAAqB;AACnBrB,EAAAA,MAAM,EAAER,SAAS,CAAC8B;AADC,EAEnBC,UAFF;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCzB,EAAAA,MAAM,EAAEyB,KAAK,CAACzB;AADoB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAAC+B,eAAD,EAAkB,IAAlB,CAAP,CAA+B3B,QAA/B,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TableApp from '../../components/Table';\nimport Button from '../../components/Button';\nimport { THREE } from '../../commons/constants';\n\nfunction Feedback(props) {\n  const { history, player: { name, assertions, score, total, gravatarEmail } } = props;\n\n  function checkAssertions() {\n    if (assertions < THREE) return 'Could be better...';\n    return 'Well Done!';\n  }\n\n  function handleRanking() {\n    console.log('executou ranking');\n    let prevRanking = localStorage.getItem('ranking');\n    if (prevRanking.length === 0) prevRanking = [];\n    const player = {\n      name,\n      score: total,\n      picture: gravatarEmail,\n    };\n    const ranking = JSON.parse(prevRanking).push(player);\n    console.log(ranking, 'ranking');\n    localStorage.setItem('ranking', JSON.stringify(ranking));\n  }\n\n  useEffect(() => {\n    handleRanking();\n  }, []);\n\n  return (\n    <section className=\"feedback\">\n      <h1>Feedback</h1>\n      <TableApp\n        name={ name }\n        score={ score }\n        gravatarEmail={ gravatarEmail }\n      />\n      <h3 data-testid=\"feedback-text\">{ checkAssertions() }</h3>\n      <p>\n        <span>Pontos: </span>\n        <span data-testid=\"feedback-total-score\">{ score }</span>\n      </p>\n      <p>\n        <span>Total: </span>\n        <span data-testid=\"feedback-total\">{ total }</span>\n      </p>\n      <p>\n        <span>Acertos: </span>\n        <span data-testid=\"feedback-total-question\">{ assertions }</span>\n      </p>\n      <div>\n        <Button\n          className=\"play__btn\"\n          dataTestid=\"btn-play-again\"\n          onClick={ () => {} }\n          text=\"Play Again\"\n          type=\"button\"\n        />\n        <Button\n          className=\"ranking__btn\"\n          dataTestid=\"btn-ranking\"\n          onClick={ () => history.push('/ranking') }\n          text=\"Ranking\"\n          type=\"button\"\n        />\n      </div>\n    </section>\n  );\n}\n\nFeedback.propTypes = {\n  player: PropTypes.object,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n});\n\nexport default connect(mapStateToProps, null)(Feedback);\n"]},"metadata":{},"sourceType":"module"}