{"ast":null,"code":"var _jsxFileName = \"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Login/index.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport './style.css';\nimport fetchToken from '../../services/token';\nimport { requestToken, setPlayer } from '../../store/actions';\n\nfunction Login(props) {\n  const [user, setUser] = useState({\n    name: '',\n    email: ''\n  });\n  const history = useHistory();\n\n  function handleChange(_ref) {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref;\n    setUser({ ...user,\n      [name]: value\n    });\n  }\n\n  function handlePlayer() {\n    const hash = md5(user.email).toString();\n    const player = {\n      name: user.name,\n      assertions: 0,\n      score: 0,\n      gravatarEmail: `https://www.gravatar.com/avatar/${hash}`\n    };\n    dispatchPlayer(player);\n  }\n\n  async function handleClick() {\n    const {\n      dispatchToken\n    } = props;\n    const tokenInfo = await fetchToken();\n    localStorage.setItem('token', JSON.stringify(tokenInfo.token));\n    dispatchToken(tokenInfo.token);\n    handlePlayer();\n    history.push('/game');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    classDiv: \"login\",\n    className: \"login__name\",\n    dataTestid: \"input-player-name\",\n    id: \"name\",\n    name: \"name\",\n    onChange: event => handleChange(event),\n    placeholder: \"Digite seu nome\",\n    value: user.name,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    classDiv: \"login\",\n    className: \"login__email\",\n    dataTestid: \"input-gravatar-email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: event => handleChange(event),\n    placeholder: \"Digite seu email\",\n    value: user.email,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: `login__button ${user.name && user.email ? '' : 'disabled'}`,\n    dataTestid: \"btn-play\",\n    disabled: !user.name || !user.email,\n    id: \"loginbtn\",\n    name: \"login-btn\",\n    onClick: () => handleClick(),\n    text: \"Play\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"settings__button\",\n    dataTestid: \"btn-settings\",\n    id: \"settingsbtn\",\n    name: \"settings-btn\",\n    onClick: () => history.push('/settings'),\n    text: \"Settings\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\n\nLogin.propTypes = {\n  history: PropTypes.instanceOf(Object),\n  dispatchToken: PropTypes.func,\n  dispatchPlayer: PropTypes.func\n}.isRequired;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchToken: tokenInfo => dispatch(requestToken(tokenInfo)),\n  dispatchPlayer: player => dispatch(setPlayer(player))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Login/index.jsx"],"names":["React","useState","PropTypes","connect","useHistory","md5","Input","Button","fetchToken","requestToken","setPlayer","Login","props","user","setUser","name","email","history","handleChange","target","value","handlePlayer","hash","toString","player","assertions","score","gravatarEmail","dispatchPlayer","handleClick","dispatchToken","tokenInfo","localStorage","setItem","JSON","stringify","token","push","event","propTypes","instanceOf","Object","func","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport './style.css';\nimport fetchToken from '../../services/token';\nimport { requestToken, setPlayer } from '../../store/actions';\n\nfunction Login(props) {\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n  });\n\n  const history = useHistory();\n\n  function handleChange({ target: { name, value } }) {\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  }\n\n  function handlePlayer() {\n    const hash = md5(user.email).toString();\n    const player = {\n      name: user.name,\n      assertions: 0,\n      score: 0,\n      gravatarEmail: `https://www.gravatar.com/avatar/${hash}`,\n    };\n    dispatchPlayer(player);\n  }\n\n  async function handleClick() {\n    const { dispatchToken } = props;\n    const tokenInfo = await fetchToken();\n    localStorage.setItem('token', JSON.stringify(tokenInfo.token));\n    dispatchToken(tokenInfo.token);\n    handlePlayer();\n    history.push('/game');\n  }\n\n  return (\n    <>\n      <Input\n        classDiv=\"login\"\n        className=\"login__name\"\n        dataTestid=\"input-player-name\"\n        id=\"name\"\n        name=\"name\"\n        onChange={ (event) => handleChange(event) }\n        placeholder=\"Digite seu nome\"\n        value={ user.name }\n        type=\"text\"\n      />\n      <Input\n        classDiv=\"login\"\n        className=\"login__email\"\n        dataTestid=\"input-gravatar-email\"\n        id=\"email\"\n        name=\"email\"\n        onChange={ (event) => handleChange(event) }\n        placeholder=\"Digite seu email\"\n        value={ user.email }\n        type=\"email\"\n      />\n      <Button\n        className={ `login__button ${(user.name && user.email) ? '' : 'disabled'}` }\n        dataTestid=\"btn-play\"\n        disabled={ !user.name || !user.email }\n        id=\"loginbtn\"\n        name=\"login-btn\"\n        onClick={ () => handleClick() }\n        text=\"Play\"\n        type=\"button\"\n      />\n      <Button\n        className=\"settings__button\"\n        dataTestid=\"btn-settings\"\n        id=\"settingsbtn\"\n        name=\"settings-btn\"\n        onClick={ () => history.push('/settings') }\n        text=\"Settings\"\n        type=\"button\"\n      />\n    </>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.instanceOf(Object),\n  dispatchToken: PropTypes.func,\n  dispatchPlayer: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchToken: (tokenInfo) => dispatch(requestToken(tokenInfo)),\n  dispatchPlayer: (player) => dispatch(setPlayer(player)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}