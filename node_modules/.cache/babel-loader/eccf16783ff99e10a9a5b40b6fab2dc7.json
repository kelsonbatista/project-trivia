{"ast":null,"code":"import _regeneratorRuntime from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{connect}from'react-redux';// import { decode } from 'he';\nimport fetchTriviaApi from'../../services/triviaApi';import TableApp from'../../components/Table';import Button from'../../components/Button';import{requestToken,setPlayer}from'../../store/actions';import fetchToken from'../../services/token';import Loading from'../../components/Loading';import{HALF,ONE,TWO,THREE,FOUR,TEN,THIRTY,THOUSAND}from'../../commons/constants';import'./style.css';import logo from'../../assets/images/logo.png';function Game(props){var interval=useRef();var dispatchPlayer=props.dispatchPlayer,dispatchToken=props.dispatchToken,history=props.history,_props$player=props.player,name=_props$player.name,assertions=_props$player.assertions,score=_props$player.score,total=_props$player.total,gravatarEmail=_props$player.gravatarEmail,token=props.token;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),countQuestions=_useState4[0],setCountQuestions=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),index=_useState6[0],setIndex=_useState6[1];var _useState7=useState(THIRTY),_useState8=_slicedToArray(_useState7,2),timer=_useState8[0],setTimer=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),timeEnd=_useState10[0],setTimeEnd=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),disabled=_useState12[0],setDisabled=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),loading=_useState14[0],setLoading=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),answerIncorrect=_useState16[0],setAnswerIncorrect=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),answerCorrect=_useState18[0],setAnswerCorrect=_useState18[1];var _useState19=useState({correct:'',incorrect:[],all:[]}),_useState20=_slicedToArray(_useState19,2),answers=_useState20[0],setAnswers=_useState20[1];function handleTrivia(){return _handleTrivia.apply(this,arguments);}function _handleTrivia(){_handleTrivia=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetchTrivia,tokenInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return fetchTriviaApi(token);case 3:fetchTrivia=_context.sent;if(!(fetchTrivia.response_code===THREE)){_context.next=12;break;}_context.next=7;return fetchToken();case 7:tokenInfo=_context.sent;dispatchToken(tokenInfo.token);_context.next=11;return fetchTriviaApi(tokenInfo.token);case 11:fetchTrivia=_context.sent;case 12:setQuestions(fetchTrivia.results);setLoading(false);case 14:case\"end\":return _context.stop();}}},_callee);}));return _handleTrivia.apply(this,arguments);}function handleAnswers(){if(questions.length>0){var _questions$index=questions[index],correct=_questions$index.correct_answer,incorrect=_questions$index.incorrect_answers;// https://flaviocopes.com/how-to-shuffle-array-javascript/\nvar all=[correct].concat(_toConsumableArray(incorrect));all=all.sort(function(){return Math.random()-HALF;});setAnswers(_objectSpread(_objectSpread({},answers),{},{correct:correct,incorrect:incorrect,all:all}));}}// https://stackoverflow.com/questions/71184843/how-to-update-state-using-setinterval-on-functional-components-in-react/71185514#71185514\nfunction handleTimer(){// interval useRef para funcionar\nfunction runTimer(){interval.current=setInterval(function(){setTimer(function(count){return count-1;});},THOUSAND);}if(timer<=0&&interval.current){setDisabled(true);setTimeEnd(true);clearInterval(interval.current);}if(timer===THIRTY){runTimer();}}function calcScore(){var level=questions[index].difficulty;if(level==='hard')return THREE;if(level==='medium')return TWO;return ONE;}function handleClick(_ref){var target=_ref.target;var correct=target.getAttribute('data-testid').includes('correct');if(correct){var player={name:name,assertions:assertions+1,score:TEN+timer*calcScore(),total:total+(TEN+timer*calcScore()),gravatarEmail:gravatarEmail};dispatchPlayer(player);setAnswerCorrect(true);}else{setAnswerIncorrect(true);}setDisabled(true);clearInterval(interval.current);}function handleNext(){// const player = {\n//   name,\n//   assertions,\n//   score: 0,\n//   total,\n//   gravatarEmail,\n// };\n// dispatchPlayer(player);\nsetCountQuestions(countQuestions+1);setIndex(index+1);setDisabled(false);setAnswerIncorrect(false);setAnswerCorrect(false);setTimer(THIRTY);handleAnswers();if(countQuestions===FOUR){setCountQuestions(0);history.push('/feedback');}}useEffect(function(){// did mount\nhandleTrivia();},[]);useEffect(function(){// did update\nhandleAnswers();},[questions]);useEffect(function(){// did update\nhandleTimer();},[timer]);return/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game__left\"},/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"Logo\",className:\"game__logo\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:\"game__score\"},\"Pontos: \".concat(score)),/*#__PURE__*/React.createElement(\"p\",{className:\"game__total\"},\"Total: \".concat(total)),questions.length>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"game__category\"},/*#__PURE__*/React.createElement(\"p\",{\"data-testid\":\"question-category\"},questions[index].category))),/*#__PURE__*/React.createElement(\"div\",{className:\"game__timer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game__circle\"},\"\\xA0\"),/*#__PURE__*/React.createElement(\"span\",null,timer))),/*#__PURE__*/React.createElement(\"main\",null,loading&&/*#__PURE__*/React.createElement(Loading,null),questions.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"game__question\"},/*#__PURE__*/React.createElement(\"div\",{\"data-testid\":\"question-text\",className:\"game__text\"},questions[index].question)),/*#__PURE__*/React.createElement(\"div\",{className:\"game__answers\",\"data-testid\":\"answer-options\"},answers.all.map(function(answer,item){return/*#__PURE__*/React.createElement(Button,{className:answer===answers.correct?'correct game__answer-txt':'incorrect game__answer-txt',dataTestid:answer===answers.correct?'correct-answer':\"wrong-answer-\".concat(item),disabled:disabled,index:item,key:item,onClick:function onClick(event){return handleClick(event);},text:answer,type:\"button\"});})),/*#__PURE__*/React.createElement(\"div\",{className:\"game__messages\"},disabled&&timeEnd&&/*#__PURE__*/React.createElement(\"p\",{className:\"msg__timeup\"},\"Tempo esgotado! Resposta inv\\xE1lida.\"),disabled&&answerIncorrect&&/*#__PURE__*/React.createElement(\"p\",{className:\"msg__wrong\"},\"Infelizmente voc\\xEA errou!\"),disabled&&answerCorrect&&/*#__PURE__*/React.createElement(\"p\",{className:\"msg__right\"},\"Parab\\xE9ns! Voc\\xEA acertou!\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"game__footer\"},/*#__PURE__*/React.createElement(TableApp,{className:\"game__profile-name\",classPicture:\"game__profile-picture\",classPictureImage:\"game__profile-image\",classScore:\"game__profile-score\",classTable:\"game__profile\",name:name,score:score,gravatarEmail:gravatarEmail}),disabled&&/*#__PURE__*/React.createElement(Button,{className:\"next\",dataTestid:\"btn-next\",onClick:function onClick(){return handleNext();},text:\"Next\",type:\"button\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"game__right\"},\"\\xA0\"));}var mapStateToProps=function mapStateToProps(state){return{player:state.player,token:state.token};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{dispatchToken:function dispatchToken(tokenInfo){return dispatch(requestToken(tokenInfo));},dispatchPlayer:function dispatchPlayer(player){return dispatch(setPlayer(player));}};};export default connect(mapStateToProps,mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Game/index.jsx"],"names":["React","useState","useEffect","useRef","connect","fetchTriviaApi","TableApp","Button","requestToken","setPlayer","fetchToken","Loading","HALF","ONE","TWO","THREE","FOUR","TEN","THIRTY","THOUSAND","logo","Game","props","interval","dispatchPlayer","dispatchToken","history","player","name","assertions","score","total","gravatarEmail","token","questions","setQuestions","countQuestions","setCountQuestions","index","setIndex","timer","setTimer","timeEnd","setTimeEnd","disabled","setDisabled","loading","setLoading","answerIncorrect","setAnswerIncorrect","answerCorrect","setAnswerCorrect","correct","incorrect","all","answers","setAnswers","handleTrivia","fetchTrivia","response_code","tokenInfo","results","handleAnswers","length","correct_answer","incorrect_answers","sort","Math","random","handleTimer","runTimer","current","setInterval","count","clearInterval","calcScore","level","difficulty","handleClick","target","getAttribute","includes","handleNext","push","category","question","map","answer","item","event","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { decode } from 'he';\nimport fetchTriviaApi from '../../services/triviaApi';\nimport TableApp from '../../components/Table';\nimport Button from '../../components/Button';\nimport { requestToken, setPlayer } from '../../store/actions';\nimport fetchToken from '../../services/token';\nimport Loading from '../../components/Loading';\nimport { HALF, ONE, TWO, THREE, FOUR,\n  TEN, THIRTY, THOUSAND } from '../../commons/constants';\nimport './style.css';\nimport logo from '../../assets/images/logo.png';\n\nfunction Game(props) {\n  const interval = useRef();\n  const { dispatchPlayer, dispatchToken, history,\n    player: { name, assertions, score, total, gravatarEmail }, token } = props;\n  const [questions, setQuestions] = useState([]);\n  const [countQuestions, setCountQuestions] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [timer, setTimer] = useState(THIRTY);\n  const [timeEnd, setTimeEnd] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [answerIncorrect, setAnswerIncorrect] = useState(false);\n  const [answerCorrect, setAnswerCorrect] = useState(false);\n  const [answers, setAnswers] = useState({\n    correct: '',\n    incorrect: [],\n    all: [],\n  });\n\n  async function handleTrivia() {\n    setLoading(true);\n    let fetchTrivia = await fetchTriviaApi(token);\n    if (fetchTrivia.response_code === THREE) {\n      const tokenInfo = await fetchToken();\n      dispatchToken(tokenInfo.token);\n      fetchTrivia = await fetchTriviaApi(tokenInfo.token);\n    }\n    setQuestions(fetchTrivia.results);\n    setLoading(false);\n  }\n\n  function handleAnswers() {\n    if (questions.length > 0) {\n      const {\n        correct_answer: correct,\n        incorrect_answers: incorrect,\n      } = questions[index];\n      // https://flaviocopes.com/how-to-shuffle-array-javascript/\n      let all = [correct, ...incorrect];\n      all = all.sort(() => Math.random() - HALF);\n      setAnswers({\n        ...answers,\n        correct,\n        incorrect,\n        all,\n      });\n    }\n  }\n\n  // https://stackoverflow.com/questions/71184843/how-to-update-state-using-setinterval-on-functional-components-in-react/71185514#71185514\n  function handleTimer() { // interval useRef para funcionar\n    function runTimer() {\n      interval.current = setInterval(() => {\n        setTimer((count) => count - 1);\n      }, THOUSAND);\n    }\n    if (timer <= 0 && interval.current) {\n      setDisabled(true);\n      setTimeEnd(true);\n      clearInterval(interval.current);\n    }\n    if (timer === THIRTY) {\n      runTimer();\n    }\n  }\n\n  function calcScore() {\n    const level = questions[index].difficulty;\n    if (level === 'hard') return THREE;\n    if (level === 'medium') return TWO;\n    return ONE;\n  }\n\n  function handleClick({ target }) {\n    const correct = target.getAttribute('data-testid').includes('correct');\n    if (correct) {\n      const player = {\n        name,\n        assertions: assertions + 1,\n        score: TEN + (timer * calcScore()),\n        total: total + (TEN + (timer * calcScore())),\n        gravatarEmail,\n      };\n      dispatchPlayer(player);\n      setAnswerCorrect(true);\n    } else {\n      setAnswerIncorrect(true);\n    }\n    setDisabled(true);\n    clearInterval(interval.current);\n  }\n\n  function handleNext() {\n    // const player = {\n    //   name,\n    //   assertions,\n    //   score: 0,\n    //   total,\n    //   gravatarEmail,\n    // };\n    // dispatchPlayer(player);\n    setCountQuestions(countQuestions + 1);\n    setIndex(index + 1);\n    setDisabled(false);\n    setAnswerIncorrect(false);\n    setAnswerCorrect(false);\n    setTimer(THIRTY);\n    handleAnswers();\n    if (countQuestions === FOUR) {\n      setCountQuestions(0);\n      history.push('/feedback');\n    }\n  }\n\n  useEffect(() => { // did mount\n    handleTrivia();\n  }, []);\n\n  useEffect(() => { // did update\n    handleAnswers();\n  }, [questions]);\n\n  useEffect(() => { // did update\n    handleTimer();\n  }, [timer]);\n\n  return (\n    <div className=\"game\">\n      <div className=\"game__left\">\n        <header>\n          <img src={ logo } alt=\"Logo\" className=\"game__logo\" />\n          <div>\n            <p className=\"game__score\">{ `Pontos: ${score}` }</p>\n            <p className=\"game__total\">{ `Total: ${total}` }</p>\n            { questions.length > 0 && (\n              <span className=\"game__category\">\n                <p data-testid=\"question-category\">\n                  { (questions[index].category) }\n                </p>\n              </span>\n            ) }\n          </div>\n          <div className=\"game__timer\">\n            <div className=\"game__circle\">&nbsp;</div>\n            <span>{ timer }</span>\n          </div>\n        </header>\n        <main>\n          { loading && <Loading />}\n          { questions.length > 0 && (\n            <div>\n              <div className=\"game__question\">\n                <div data-testid=\"question-text\" className=\"game__text\">\n                  { (questions[index].question) }\n                </div>\n              </div>\n              <div className=\"game__answers\" data-testid=\"answer-options\">\n                { /* // https://flaviocopes.com/how-to-shuffle-array-javascript/ */}\n                { answers.all.map((answer, item) => (\n                  <Button\n                    className={ ((answer === answers.correct)\n                      ? 'correct game__answer-txt'\n                      : 'incorrect game__answer-txt') }\n                    dataTestid={ (answer === answers.correct\n                      ? 'correct-answer'\n                      : `wrong-answer-${item}`) }\n                    disabled={ disabled }\n                    index={ item }\n                    key={ item }\n                    onClick={ (event) => handleClick(event) }\n                    text={ answer }\n                    type=\"button\"\n                  />\n                )) }\n              </div>\n              <div className=\"game__messages\">\n                { (disabled && timeEnd)\n                && <p className=\"msg__timeup\">Tempo esgotado! Resposta inválida.</p>}\n                { (disabled && answerIncorrect)\n                  && <p className=\"msg__wrong\">Infelizmente você errou!</p>}\n                { (disabled && answerCorrect)\n                && <p className=\"msg__right\">Parabéns! Você acertou!</p>}\n              </div>\n            </div>\n          )}\n          <div className=\"game__footer\">\n            <TableApp\n              className=\"game__profile-name\"\n              classPicture=\"game__profile-picture\"\n              classPictureImage=\"game__profile-image\"\n              classScore=\"game__profile-score\"\n              classTable=\"game__profile\"\n              name={ name }\n              score={ score }\n              gravatarEmail={ gravatarEmail }\n            />\n            { disabled && (\n              <Button\n                className=\"next\"\n                dataTestid=\"btn-next\"\n                onClick={ () => handleNext() }\n                text=\"Next\"\n                type=\"button\"\n              />\n            )}\n          </div>\n        </main>\n      </div>\n      <div className=\"game__right\">\n        &nbsp;\n      </div>\n    </div>\n  );\n}\n\nGame.propTypes = {\n  name: PropTypes.string,\n  score: PropTypes.number,\n  token: PropTypes.string,\n  history: PropTypes.instanceOf(Object),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  token: state.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchToken: (tokenInfo) => dispatch(requestToken(tokenInfo)),\n  dispatchPlayer: (player) => dispatch(setPlayer(player)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}