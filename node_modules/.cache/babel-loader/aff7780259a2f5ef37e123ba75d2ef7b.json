{"ast":null,"code":"import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport requestToken from '../store/actions';\nexport const fetchToken = props => {\n  // const { dispatchToken } = props;\n  const tokenRequestUrl = 'https://opentdb.com/api_token.php?command=request';\n  fetch(tokenRequestUrl).then(result => result.json()).then(data => props.dispatchToken(JSON.stringify(data))).catch(error => `Error found: ${error}`);\n};\nfetchToken.propTypes = {\n  dispatchToken: PropTypes.func\n}.isRequired;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchToken: tokenInfo => dispatch(requestToken(tokenInfo))\n});\n\nexport default connect(null, mapDispatchToProps)(fetchToken);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/services/token.js"],"names":["connect","PropTypes","requestToken","fetchToken","props","tokenRequestUrl","fetch","then","result","json","data","dispatchToken","JSON","stringify","catch","error","propTypes","func","isRequired","mapDispatchToProps","dispatch","tokenInfo"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnC;AACA,QAAMC,eAAe,GAAG,mDAAxB;AACAC,EAAAA,KAAK,CAACD,eAAD,CAAL,CACGE,IADH,CACSC,MAAD,IAAYA,MAAM,CAACC,IAAP,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAUN,KAAK,CAACO,aAAN,CAAoBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAApB,CAFlB,EAGGI,KAHH,CAGUC,KAAD,IAAY,gBAAeA,KAAM,EAH1C;AAID,CAPM;AASPZ,UAAU,CAACa,SAAX,GAAuB;AACrBL,EAAAA,aAAa,EAAEV,SAAS,CAACgB;AADJ,EAErBC,UAFF;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCT,EAAAA,aAAa,EAAGU,SAAD,IAAeD,QAAQ,CAAClB,YAAY,CAACmB,SAAD,CAAb;AADE,CAAf,CAA3B;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkChB,UAAlC,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport requestToken from '../store/actions';\n\nexport const fetchToken = (props) => {\n  // const { dispatchToken } = props;\n  const tokenRequestUrl = 'https://opentdb.com/api_token.php?command=request';\n  fetch(tokenRequestUrl)\n    .then((result) => result.json())\n    .then((data) => props.dispatchToken(JSON.stringify(data)))\n    .catch((error) => `Error found: ${error}`);\n};\n\nfetchToken.propTypes = {\n  dispatchToken: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchToken: (tokenInfo) => dispatch(requestToken(tokenInfo)),\n});\n\nexport default connect(null, mapDispatchToProps)(fetchToken);\n"]},"metadata":{},"sourceType":"module"}