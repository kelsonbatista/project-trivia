{"ast":null,"code":"var _jsxFileName = \"/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Game/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchTriviaApi from '../../services/triviaApi';\nimport TableApp from '../../components/Table';\n\nfunction Game(props) {\n  const {\n    player: {\n      name,\n      score,\n      gravatarEmail\n    }\n  } = props;\n  const [questions, setQuestions] = useState({});\n  const [index, setIndex] = useState(0); // const {\n  // category,\n  // correct_answer,\n  // difficulty,\n  // incorrect_answers,\n  // question,\n  // type,\n  // } = questions[index];\n\n  console.log(Object.entries(questions[index]));\n\n  async function handleQuestions() {\n    const fetchQuestions = await fetchTriviaApi();\n    setQuestions(fetchQuestions.results);\n  }\n\n  useEffect(() => {\n    handleQuestions();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"TRIVIA\"), /*#__PURE__*/React.createElement(TableApp, {\n    name: name,\n    score: score,\n    gravatarEmail: gravatarEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, console.log(questions), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Question\"))));\n}\n\nGame.propTypes = {\n  name: PropTypes.string,\n  score: PropTypes.number\n}.isRequired;\n\nconst mapStateToProps = state => ({\n  player: state.player\n});\n\nexport default connect(mapStateToProps, null)(Game);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/pages/Game/index.jsx"],"names":["React","useState","useEffect","PropTypes","connect","fetchTriviaApi","TableApp","Game","props","player","name","score","gravatarEmail","questions","setQuestions","index","setIndex","console","log","Object","entries","handleQuestions","fetchQuestions","results","propTypes","string","number","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAAV,MAA6CJ,KAAnD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC,CAHmB,CAInB;AACE;AACA;AACA;AACA;AACA;AACA;AACF;;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAP,CAAeP,SAAS,CAACE,KAAD,CAAxB,CAAZ;;AAEA,iBAAeM,eAAf,GAAiC;AAC/B,UAAMC,cAAc,GAAG,MAAMjB,cAAc,EAA3C;AACAS,IAAAA,YAAY,CAACQ,cAAc,CAACC,OAAhB,CAAZ;AACD;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAGX,IADT;AAEE,IAAA,KAAK,EAAGC,KAFV;AAGE,IAAA,aAAa,EAAGC,aAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIK,OAAO,CAACC,GAAR,CAAYL,SAAZ,CADJ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAG,mBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CATF,CADF;AAmBD;;AAEDN,IAAI,CAACiB,SAAL,GAAiB;AACfd,EAAAA,IAAI,EAAEP,SAAS,CAACsB,MADD;AAEfd,EAAAA,KAAK,EAAER,SAAS,CAACuB;AAFF,EAGfC,UAHF;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCpB,EAAAA,MAAM,EAAEoB,KAAK,CAACpB;AADoB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CAAP,CAA+BrB,IAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport fetchTriviaApi from '../../services/triviaApi';\nimport TableApp from '../../components/Table';\n\nfunction Game(props) {\n  const { player: { name, score, gravatarEmail } } = props;\n  const [questions, setQuestions] = useState({});\n  const [index, setIndex] = useState(0);\n  // const {\n    // category,\n    // correct_answer,\n    // difficulty,\n    // incorrect_answers,\n    // question,\n    // type,\n  // } = questions[index];\n\n  console.log(Object.entries(questions[index]));\n\n  async function handleQuestions() {\n    const fetchQuestions = await fetchTriviaApi();\n    setQuestions(fetchQuestions.results);\n  }\n\n  useEffect(() => {\n    handleQuestions();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>TRIVIA</h1>\n        <TableApp\n          name={ name }\n          score={ score }\n          gravatarEmail={ gravatarEmail }\n        />\n      </header>\n      <main>\n        { console.log(questions) }\n        <div>\n          {/* <p data-testid=\"question-category\">{`Category: ${category}`}</p> */}\n          <p data-testid=\"question-text\">Question</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nGame.propTypes = {\n  name: PropTypes.string,\n  score: PropTypes.number,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n});\n\nexport default connect(mapStateToProps, null)(Game);\n"]},"metadata":{},"sourceType":"module"}