{"ast":null,"code":"import { handleExpiredToken, handleToken } from '../services/requestApi';\nexport const Rached = event => ({\n  type: 'RACHED',\n  payload: event\n});\nexport const Token = event => ({\n  type: 'TOKEN',\n  payload: event\n});\nexport function requestToken() {\n  return async dispatch => {\n    const token = await handleToken();\n    dispatch(Token(token));\n  };\n}\nexport function handleApi() {\n  const NOT_FOUND = 3;\n  return async dispatch => {\n    const token = await handleToken();\n    const response = await handleExpiredToken(token);\n\n    if (response.response_code === NOT_FOUND) {\n      const newToken = await handleToken();\n      const newResponseCode = await handleExpiredToken(newToken);\n      return dispatch(questions(newResponseCode.results));\n    }\n\n    dispatch(questions(response.results));\n  };\n}\nexport const questions = event => ({\n  type: 'QUESTIONS',\n  payload: event\n});\nexport const addScore = event => ({\n  type: 'ADD_SCORE',\n  payload: event\n});\nexport const setUserInfo = event => ({\n  type: 'SET_USER_INFO',\n  payload: event\n});\nexport const setRanking = event => ({\n  type: 'SET_RANKING',\n  payload: event\n});","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/action/index.js"],"names":["handleExpiredToken","handleToken","Rached","event","type","payload","Token","requestToken","dispatch","token","handleApi","NOT_FOUND","response","response_code","newToken","newResponseCode","questions","results","addScore","setUserInfo","setRanking"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,WAA7B,QAAgD,wBAAhD;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAE,QAD0B;AAEhCC,EAAAA,OAAO,EAAEF;AAFuB,CAAZ,CAAf;AAKP,OAAO,MAAMG,KAAK,GAAIH,KAAD,KAAY;AAC/BC,EAAAA,IAAI,EAAE,OADyB;AAE/BC,EAAAA,OAAO,EAAEF;AAFsB,CAAZ,CAAd;AAKP,OAAO,SAASI,YAAT,GAAwB;AAC7B,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,KAAK,GAAG,MAAMR,WAAW,EAA/B;AACAO,IAAAA,QAAQ,CAACF,KAAK,CAACG,KAAD,CAAN,CAAR;AACD,GAHD;AAID;AAED,OAAO,SAASC,SAAT,GAAqB;AAC1B,QAAMC,SAAS,GAAG,CAAlB;AACA,SAAO,MAAOH,QAAP,IAAoB;AACzB,UAAMC,KAAK,GAAG,MAAMR,WAAW,EAA/B;AACA,UAAMW,QAAQ,GAAG,MAAMZ,kBAAkB,CAACS,KAAD,CAAzC;;AACA,QAAIG,QAAQ,CAACC,aAAT,KAA2BF,SAA/B,EAA0C;AACxC,YAAMG,QAAQ,GAAG,MAAMb,WAAW,EAAlC;AACA,YAAMc,eAAe,GAAG,MAAMf,kBAAkB,CAACc,QAAD,CAAhD;AACA,aAAON,QAAQ,CAACQ,SAAS,CAACD,eAAe,CAACE,OAAjB,CAAV,CAAf;AACD;;AACDT,IAAAA,QAAQ,CAACQ,SAAS,CAACJ,QAAQ,CAACK,OAAV,CAAV,CAAR;AACD,GATD;AAUD;AAED,OAAO,MAAMD,SAAS,GAAIb,KAAD,KAAY;AACnCC,EAAAA,IAAI,EAAE,WAD6B;AAEnCC,EAAAA,OAAO,EAAEF;AAF0B,CAAZ,CAAlB;AAKP,OAAO,MAAMe,QAAQ,GAAIf,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAE,WAD4B;AAElCC,EAAAA,OAAO,EAAEF;AAFyB,CAAZ,CAAjB;AAKP,OAAO,MAAMgB,WAAW,GAAIhB,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE,eAD+B;AAErCC,EAAAA,OAAO,EAAEF;AAF4B,CAAZ,CAApB;AAKP,OAAO,MAAMiB,UAAU,GAAIjB,KAAD,KAAY;AACpCC,EAAAA,IAAI,EAAE,aAD8B;AAEpCC,EAAAA,OAAO,EAAEF;AAF2B,CAAZ,CAAnB","sourcesContent":["import { handleExpiredToken, handleToken } from '../services/requestApi';\n\nexport const Rached = (event) => ({\n  type: 'RACHED',\n  payload: event,\n});\n\nexport const Token = (event) => ({\n  type: 'TOKEN',\n  payload: event,\n});\n\nexport function requestToken() {\n  return async (dispatch) => {\n    const token = await handleToken();\n    dispatch(Token(token));\n  };\n}\n\nexport function handleApi() {\n  const NOT_FOUND = 3;\n  return async (dispatch) => {\n    const token = await handleToken();\n    const response = await handleExpiredToken(token);\n    if (response.response_code === NOT_FOUND) {\n      const newToken = await handleToken();\n      const newResponseCode = await handleExpiredToken(newToken);\n      return dispatch(questions(newResponseCode.results));\n    }\n    dispatch(questions(response.results));\n  };\n}\n\nexport const questions = (event) => ({\n  type: 'QUESTIONS',\n  payload: event,\n});\n\nexport const addScore = (event) => ({\n  type: 'ADD_SCORE',\n  payload: event,\n});\n\nexport const setUserInfo = (event) => ({\n  type: 'SET_USER_INFO',\n  payload: event,\n});\n\nexport const setRanking = (event) => ({\n  type: 'SET_RANKING',\n  payload: event,\n});\n"]},"metadata":{},"sourceType":"module"}