{"ast":null,"code":"import { connect } from 'react-redux';\nimport { SCORE_INIT, SCORE_EASY, SCORE_MEDIUM, SCORE_HARD } from '../constants/ScreenGame';\n\nfunction checkAnswer(_ref, _ref2) {\n  let {\n    target\n  } = _ref;\n  let {\n    player: {\n      name,\n      email,\n      score,\n      total,\n      assertions\n    },\n    questions\n  } = _ref2;\n  let difficulty = 0;\n\n  if (questions[index].difficulty === 'easy') {\n    difficulty = SCORE_EASY;\n  } else if (questions[index].difficulty === 'medium') {\n    difficulty = SCORE_MEDIUM;\n  } else if (questions[index].difficulty === 'hard') {\n    difficulty = SCORE_HARD;\n  }\n\n  const isCorrect = target.getAttribute('data-testid').includes('correct');\n\n  if (isCorrect) {\n    const newScore = SCORE_INIT + Interval * difficulty;\n    const userInfo = {\n      name,\n      email,\n      score: score + newScore,\n      total: total + newScore,\n      assertions: assertions + 1\n    };\n    localStorage.setItem('player', JSON.stringify(userInfo));\n    props.dispatchUserInfo(userInfo);\n  }\n}\n\nconst mapStateToProps = state => ({\n  parameters: state.parameters\n});\n\nexport default connect(mapStateToProps, null)(checkAnswer);","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/commons/utils/ScreenGame.js"],"names":["connect","SCORE_INIT","SCORE_EASY","SCORE_MEDIUM","SCORE_HARD","checkAnswer","target","player","name","email","score","total","assertions","questions","difficulty","index","isCorrect","getAttribute","includes","newScore","Interval","userInfo","localStorage","setItem","JSON","stringify","props","dispatchUserInfo","mapStateToProps","state","parameters"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,EACEC,UADF,QACoB,yBADpB;;AAGA,SAASC,WAAT,cAGE;AAAA,MAFA;AAAEC,IAAAA;AAAF,GAEA;AAAA,MADA;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA;AAA7B,KAAV;AAAqDC,IAAAA;AAArD,GACA;AACA,MAAIC,UAAU,GAAG,CAAjB;;AACA,MAAID,SAAS,CAACE,KAAD,CAAT,CAAiBD,UAAjB,KAAgC,MAApC,EAA4C;AAC1CA,IAAAA,UAAU,GAAGZ,UAAb;AACD,GAFD,MAEO,IAAIW,SAAS,CAACE,KAAD,CAAT,CAAiBD,UAAjB,KAAgC,QAApC,EAA8C;AACnDA,IAAAA,UAAU,GAAGX,YAAb;AACD,GAFM,MAEA,IAAIU,SAAS,CAACE,KAAD,CAAT,CAAiBD,UAAjB,KAAgC,MAApC,EAA4C;AACjDA,IAAAA,UAAU,GAAGV,UAAb;AACD;;AAED,QAAMY,SAAS,GAAGV,MAAM,CAACW,YAAP,CAAoB,aAApB,EAAmCC,QAAnC,CAA4C,SAA5C,CAAlB;;AACA,MAAIF,SAAJ,EAAe;AACb,UAAMG,QAAQ,GAAGlB,UAAU,GAAImB,QAAQ,GAAGN,UAA1C;AACA,UAAMO,QAAQ,GAAG;AACfb,MAAAA,IADe;AAEfC,MAAAA,KAFe;AAGfC,MAAAA,KAAK,EAAEA,KAAK,GAAGS,QAHA;AAIfR,MAAAA,KAAK,EAAEA,KAAK,GAAGQ,QAJA;AAKfP,MAAAA,UAAU,EAAEA,UAAU,GAAG;AALV,KAAjB;AAOAU,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA/B;AACAK,IAAAA,KAAK,CAACC,gBAAN,CAAuBN,QAAvB;AACD;AACF;;AAED,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,UAAU,EAAED,KAAK,CAACC;AADgB,CAAZ,CAAxB;;AAIA,eAAe9B,OAAO,CAAC4B,eAAD,EAAkB,IAAlB,CAAP,CAA+BvB,WAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { SCORE_INIT, SCORE_EASY, SCORE_MEDIUM,\n  SCORE_HARD } from '../constants/ScreenGame';\n\nfunction checkAnswer(\n  { target },\n  { player: { name, email, score, total, assertions }, questions },\n) {\n  let difficulty = 0;\n  if (questions[index].difficulty === 'easy') {\n    difficulty = SCORE_EASY;\n  } else if (questions[index].difficulty === 'medium') {\n    difficulty = SCORE_MEDIUM;\n  } else if (questions[index].difficulty === 'hard') {\n    difficulty = SCORE_HARD;\n  }\n\n  const isCorrect = target.getAttribute('data-testid').includes('correct');\n  if (isCorrect) {\n    const newScore = SCORE_INIT + (Interval * difficulty);\n    const userInfo = {\n      name,\n      email,\n      score: score + newScore,\n      total: total + newScore,\n      assertions: assertions + 1,\n    };\n    localStorage.setItem('player', JSON.stringify(userInfo));\n    props.dispatchUserInfo(userInfo);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  parameters: state.parameters,\n});\n\nexport default connect(mapStateToProps, null)(checkAnswer);\n"]},"metadata":{},"sourceType":"module"}