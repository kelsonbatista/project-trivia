{"ast":null,"code":"import React from'react';function Button(props){var className=props.className,dataTestid=props.dataTestid,disabled=props.disabled,id=props.id,key=props.key,name=props.name,onClick=props.onClick,type=props.type,text=props.text;// const item = index + 1;\n// const answerNumber = (<span className=\"game__answer-num\">{ item }</span>);\n// <span className=\"game__answer\">\n//     {item ? answerNumber : ''}\n// </span>\nreturn/*#__PURE__*/React.createElement(\"button\",{className:className,\"data-testid\":dataTestid,disabled:disabled,id:id,key:key,name:name,onClick:onClick,type:type==='submit'?'submit':'button'},text);}export default Button;","map":{"version":3,"sources":["/home/kelson/Projetos/trybe-projetos/16-sd-017-project-trivia-react-redux/src/components/Button/index.jsx"],"names":["React","Button","props","className","dataTestid","disabled","id","key","name","onClick","type","text"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACrB,GAAQC,CAAAA,SAAR,CACqCD,KADrC,CAAQC,SAAR,CAAmBC,UAAnB,CACqCF,KADrC,CAAmBE,UAAnB,CAA+BC,QAA/B,CACqCH,KADrC,CAA+BG,QAA/B,CAAyCC,EAAzC,CACqCJ,KADrC,CAAyCI,EAAzC,CACEC,GADF,CACqCL,KADrC,CACEK,GADF,CACOC,IADP,CACqCN,KADrC,CACOM,IADP,CACaC,OADb,CACqCP,KADrC,CACaO,OADb,CACsBC,IADtB,CACqCR,KADrC,CACsBQ,IADtB,CAC4BC,IAD5B,CACqCT,KADrC,CAC4BS,IAD5B,CAGA;AACA;AAEA;AACA;AACA;AAEA,mBACE,8BACE,SAAS,CAAGR,SADd,CAEE,cAAcC,UAFhB,CAGE,QAAQ,CAAGC,QAHb,CAIE,EAAE,CAAGC,EAJP,CAKE,GAAG,CAAGC,GALR,CAME,IAAI,CAAGC,IANT,CAOE,OAAO,CAAGC,OAPZ,CAQE,IAAI,CAAGC,IAAI,GAAK,QAAT,CAAoB,QAApB,CAA+B,QARxC,EAUIC,IAVJ,CADF,CAcD,CAUD,cAAeV,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button(props) {\n  const { className, dataTestid, disabled, id,\n    key, name, onClick, type, text } = props;\n\n  // const item = index + 1;\n  // const answerNumber = (<span className=\"game__answer-num\">{ item }</span>);\n\n  // <span className=\"game__answer\">\n  //     {item ? answerNumber : ''}\n  // </span>\n\n  return (\n    <button\n      className={ className }\n      data-testid={ dataTestid }\n      disabled={ disabled }\n      id={ id }\n      key={ key }\n      name={ name }\n      onClick={ onClick }\n      type={ type === 'submit' ? 'submit' : 'button' }\n    >\n      { text }\n    </button>\n  );\n}\n\nButton.propTypes = {\n  dataTestid: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n}.isRequired;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}